<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAUlIQAAEABABYEgAAFgAAACgAAABSAAAApAAAAAEABAAAAAAAAAAAAGAAAABgAAAAEAAAAAAA
        AAAAAAAAERERAD08PAA6V20AZnF4AJ6foAC/vr4A6OjoAEfj+wAJz/YAhfX6AAK26AAEmcsAA6LWAFmw
        0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADiKiImZmZ
        mbu7u73bu7u7u7u5mZmZmKqqrjAAAAAAAAAAAAAAAAAAAAAAAAOIiImZmZu7u93d3d3d3du7u7u5mZmY
        qqquMAAAAAAAAAAAAAAAAAAAAAAAA+iIiZmZu7vd3czMzM3d3d3bu7uZmZiKqq4wAAAAAAAAAAAAAAAA
        AAAAAAAD6IiJmZu7u93dzMzMzN3d3d3bu7mZmIqqrjAAAAAAAAAAAAAAAAAAAAAAAAPoiImZm7u93czM
        zMzMzd3d3bu7uZmYiqquMAAAAAAAAAAAAAAAAAAAAAAAA+iIiZmZu7vd3czMzM3d3d3d27u5mZiKqq4w
        AAAAAAAAAAAAAAAAAAAAAAAD6IiJmbu7vd3dzMzMzM3d3d3bu7mZmIqqrjAAAAAAAAAAAAAAAAAAAAAA
        AAPoiImZm7u73d3MzMzM3d3d3du7uZmYiqquMAAAAAAAAAAAAAAAAAAAAAAAA+iIiZm7u73d3MzMzMzN
        3d3d27u5mZiKqq4wAAAAAAAAAAAAAAAAAAAAAAAD6IiJmZm7u93d3MzMzd3d3d3bu7mZmIqqrjAAAAAA
        AAAAAAAAAAAAAAAAAAPoiImZu7u93czMzMzMzN3d3du7uZmYiqquMAAAAAAAAAAAAAAAAAAAAAAAA+iI
        iZm7u73d3MzMzMzN3d3d3bu5mZiKqq4wAAAAAAAAAAAAAAAAAAAAAAAD6IiJmZu7vd3MzMzMzMzd3d3d
        u7mZmIqqrjAAAAAAAAAAAAAAAAAAAAAAAAPoiImZu7u93dzMzMzMzd3d3du7uZmYiqquMAAAAAAAAAAA
        AAAAAAAAAAAAA+iIiZmZu7vd3dzMzM3d3d3d27uZmZiKqq4wAAAAAAAAAAAAAAAAAAAAAAAD6IiJmbu7
        vd3czMzMzMzN3d3du7mZmIqqrjAAAAAAAAAAAAAAAAAAAAAAAAPoiImZu7u73dzMzMzN3d3d29u7uZmY
        iqquMAAAAAAAAAAAAAAAAAAAAAAAA+iIiZm7u73d3MzMzMzN3d3d27u5mZiKqq4wAAAAAAAAAAAAAAAA
        AAAAAAAD6IiJmbu7u93dzMzMzd3d3d3bu7mZmIqqrjAAAAAAAAAAAAAAAAAAAAAAAAPoiImZu7u93d3M
        zMzMzd3d3du7uZmYiqquMAAAAAAAAAAAAAAAAAAAAAAAA+iIiZm7u73d3MzMzM3d3d3d27u5mZiKqq4w
        AAAAAAAAAAAAAAAAAAAAAAAD6IiJmbu7vd3czMzMzM3d3d3bu7mZmIqqrjAAAAAAAAAAAAAAAAAAAAAA
        AAPoiImZu7u93czMzMzMzM3d3d27uZmYiqquMAAAAAAAAAAAAAAAAAAAAAAAA+iIiZmbu7vd3dzMzMzd
        3d3d27u5mZiKqq4wAAAAAAAAAAAAAAAAAAAAAAAD6IiJmZm7u93dzMzMzN3d3d3bu7mZmIqqrjAAAAAA
        AAAAAAAAAAAAAAAAAAPoiImZu7vd3czMzMzMzMzd3d3bu5mYiqquMAAAAAAAAAAAAAAAAAAAAAAAA+iI
        iZm7u73d3czMzM3d3d3d27u5mZiKqq4wAAAAAAAAAAAAAAAAAAAAAAAD6IiJmbu7vd3MzMzMzMzN3d3d
        u7mZmIqqrjAAAAAAAAAAAAAAAAAAAAAAAAPoiImZmbu73dzMzMzM3d3d3du7u5mYiqquMAAAAAAAAAAA
        AAAAAAAAAAAAA+iIiZm7u73d3dzMzMzN3d3d27u5mZiKqq4wAAAAAAAAAAAAAAAAAAAAAAAD6IiJmbu7
        vd3MzMzMzMzd3d3bu7mZmKqqrjAAAAAAAAAAAAAAAAAAAAAAAAPoiImZm7u73d3czMzd3d3d3d27u5mY
        iqquMAAAAAAAAAAAAAAAAAAAAAAAA+iIiZmbu73dzMzMzMzM3d3d27u5mZiKqq4wAAAAAAAAAAAAAAAA
        AAAAAAAD6IiJmZm7u93d3dzN3d3d3d3bu7mZmIqqrjAAAAAAAAAAAAAAAAAAAAAAAAPoiImbu7vd3MzM
        zMzMzMzMzd3bu5mYiqquMAAAAAAAAAAAAAAAAAAAAAAAA+iIiZmZu73d3MzMzMzN3d3du7uZmZiqqq4w
        AAAAAAAAAAAAAAAAAAAAAAAD6IiJmbu7vd3czMzMzMzN3d3du7uZmIqqrjAAAAAAAAAAAAAAAAAAAAAA
        AAPoiImZmZu7u93d3d3d27u7u7u5mZmYiqquMAAAAAAAAAAAAAAAAAAAAAAAA+iIiZmbvd7u5EREMzMz
        NERE7s7bmZiKqq4wAAAAAAAAAAAAAAAAAAAAAAAD6IiO5VVV7u5EREQzMzM0RERERFVVXuqqrjAAAAAA
        AAAAAAAAAAAAAAAAAASqqq7u7u7u7u7u7u7u7u7u7u7u7u7u7qqqMAAAAAAAAAAAAAAAAAAAAAAAAAAA
        JnZmdgAAAAAAAAAAAAAAAABmVHdjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdmZmAAAAAAAAAAAAAAAA
        AGZUdnMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2ZmYAAAAAAAAAAAAAAAAAZlR2dAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAJnZmZgAAAAAAAAAAAAAAAABmVHZ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdmVm
        AAAAAAAAAAAAAAAAAGZUdnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2ZWYAAAAAAAAAAAAAAAAAZlR2
        dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJnZlZgAAAAAAAAAAAAAAAABlVHZ0AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAmdmVWAAAAAAAAAAAAAAAAAGVUdnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2ZVYAAAAA
        AAAAAAAAAAAAZVR2dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJnZlVgAAAAAAAAAAAAAAAABlVHZ0AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAmdmRWAAAAAAAAAAAAAAAAAGVUdnQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAACZ2ZFYAAAAAAAAAAAAAAAAAZVR2dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJnZkVgAAAAAAAAAA
        AAAAAABUVHZ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdmRGAAAAAAAAAAAAAAAAAFRUdnMAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAACZ2ZEYQAAAAAAAAAAAAAAAAZVR2cwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        JnZkVSAAAAAAAAAAAAAAAAFVRHZyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGdmVVQAAAAAAAAAAAAAAA
        BFVEdXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV2ZVVgAAAAAAAAAAAAAAAFVUV1cAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAABGZlVWIAAAAAAAAAAAAAACVVNnZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZmZV
        VgAAAAAAAAAAAAAAVVQ3ZyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmZlVWQAAAAAAAAAAAAANVU1dX
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZmVVViAAAAAAAAAAAAJVVCd2UAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABmZlVVYwAAAAAAAAAAJVVSV2cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEdmZVVWQA
        AAAAAAAARWZSN3ZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmZlVVVmMAAAAAACVWZjJ3ZwAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABdmZUVlZmUyESNVVmZSJ3ZxAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAnZnZFZlVmZmZmZmZCJ3ZyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ2Z3VFVmZmZm
        ZlQhV3ZjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdmd2UzREVURCEld3ViAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAWZnd3ZUQzRFZ3d3VhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABHZnd3d3d3d3d1VAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGZmd3d3d3ZVQA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlZmZmZlVCAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAEiIhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/////////////wAD/////////////wAD/////////////wAD/////////////
        wAD/////////////wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//
        wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//
        wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//
        wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//
        wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//
        wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//
        wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//
        wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD//gAAAAAAAB//
        wAD//gAAAAAAAB//wAD//gAAAAAAAB//wAD///AP///8A///wAD///AP///8A///wAD///AP///8A///
        wAD///AP///8A///wAD///AP///8A///wAD///AP///8A///wAD///AP///8A///wAD///AP///8A///
        wAD///AP///8A///wAD///AP///8A///wAD///AP///8A///wAD///AP///8A///wAD///AP///8A///
        wAD///AP///8A///wAD///AH///8A///wAD///AH///4A///wAD///gH///4B///wAD///gH///4B///
        wAD///gD///wB///wAD///gD///wB///wAD///wB///gD///wAD///wA///AD///wAD///4Af/+AH///
        wAD///4AP/8AH///wAD///8AD/wAP///wAD///8AAAAAP///wAD///+AAAAAf///wAD////AAAAA////
        wAD////gAAAB////wAD////wAAAD////wAD////8AAAP////wAD/////AAA/////wAD/////wAD/////
        wAD//////A//////wAD/////////////wAD/////////////wAA=
</value>
  </data>
</root>